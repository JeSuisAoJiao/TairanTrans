#Swift教程 第三部分：元组，协议，委托和表视图


欢迎回到我们的Swift教程系列！

在[第一篇Swift教程](http://www.raywenderlich.com/74438/swift-tutorial-a-quick-start)里,我们学习了Swift语言的基础，并且创建了属于我们自己的小费计算器类。

在[第二篇Swift教程](http://www.raywenderlich.com/74904/swift-tutorial-part-2-simple-ios-app)里，我们为小费计算器工程创建了一个简单的用户界面。

在这第三篇Swift教程中，我们将学习一个Swift引入的一个新的数据类型：元组。

我们也将学习协议，委托，表视图，以及如何在Playgrounds中规范用户界面。

这篇教程补充了[第二篇Swift教程](http://www.raywenderlich.com/74904/swift-tutorial-part-2-simple-ios-app)中遗漏的知识。如果你还没有学习过第二篇教程，请确保你已经下载了上次遗漏的工程案例。

    注意: 在撰写这篇指南以前，我们的理解是我们不能张贴Xcode相关的截图，因为它还处于Beta阶段。因此，我们在确保不会引起相关问题之前，将不会提供截屏。

##开始

到现在为止，我们的小费计算器为每个小费百分比提供了一个参考。然而，一旦你选择了你要付的小费，你必须在你脑中将小费加到账单总额——

你的**calcTipWithTipPct()**方法最好返回两个值：小费数额，包括小费的账单总额。

在Objective-C中，如果你要创建一个具有两个返回值的方法，你要么需要创建一个返回值有两个属性的Objective-C对象，要么你需要返回一个包含两个值的字典。在Swift中，还有一个可选的途径：元组。

现在我们开始耍耍元组感受一下它是如何运作的。在Xcode中创建一个Playground（或者如果你采纳我在[第一篇Swift教程](http://www.raywenderlich.com/74438/swift-tutorial-a-quick-start)中的建议，就只要点击已经保存到dock上的Playground）。在你的Playground中删除所有东西以便我们从一个干净的环境下开始。

##未命名元组

让我们从创建一个叫做**未命名元组**的东西开始。在Playground中输入以下内容：

`let tipAndTotal = (4.00, 25.19)`

这里我们将两个双精度型数值（小费和总额）组合到一个元组类型的值中。这里用到了推断语法因为编译器可以根据你设定的初始值自动识别数据类型。你也可以显式地改写上述代码如下：

`let tipAndTotal:(Double, Double) = (4.00, 25.19)`

如果要访问元组中的单个元素，有两种方案：通过索引访问，通过名字分解。可以在Playground中加上以下代码来试下第一种方案：

tipAndTotal.0
tipAndTotal.1

你将在Playground的侧边栏看到4.0和25.19两个值。通过索引访问可以在必要时候用一下，但是不如通过名字分解来的清晰。可以在Playground中加上以下代码来试下第二种方案：

let (theTipAmt, theTotal) = tipAndTotal
theTipAmt
theTotal

这种语法允许你用一个特殊的名字创建一个新的常量来代表元组中的每个元素。

##命名元组

未命名元组可以使用，但是就像你看到的那样，它需要一些额外的代码来通过名字访问每一项。

当你在声明时为你的元组命名的时候，通常用**命名元组**来代替它会更加方便。可以在Playground中加上以下代码来尝试一下：

let tipAndTotalNamed = (tipAmt:4.00, total:25.19)
tipAndTotalNamed.tipAmt
tipAndTotalNamed.total

正如你看到的这将会更加方便，并且这也是我们在以后的教程当中要用到的。

最后我想要再一次指出你在声明tipAndTotalNamed方法的时候使用推断语法。如果你想要使用显式语法，那么代码会像以下这样：

let tipAndTotalNamed:(tipAmt:Double, total:Double) = (4.00, 25.19)

注意当你使用显式语法的时候，在右手边命名变量是可选的。

##返回元组
